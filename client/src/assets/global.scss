/* Box sizing rules */
*,
*::before,
*::after {
  box-sizing: border-box;
}

/* Remove default margin */
body,
h1,
h2,
h3,
h4,
p,
figure,
blockquote,
dl,
dd {
  margin: 0;
}

/* Remove list styles on ul, ol elements with a list role, which suggests default styling will be removed */
ul[role='list'],
ol[role='list'] {
  list-style: none;
}

/* Set core root defaults */
html:focus-within {
  scroll-behavior: smooth;
}

/* Set core body defaults */
body {
  // min-height: 100vh;
  background-color: $light-background;
  color: $light-text;
  font-family: -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;
  font-size: 20px;
}

#app {
  height: 100%;
  display: flex;
  flex-direction: column;
}

input {
  background-color: $light-background;
  border: 2px solid $light-border;
  color: $light-text;
  font-family: inherit;
  font-size: 1.25rem;
  padding: 20px 15px;
  border-radius: 5px;
  margin: 4px 2px;
  box-sizing: border-box;
  display: inline-block;
  line-height: 1.2;
  min-height: 48px;

  // Transitions for smooth focus/hover effects
  transition: border-color 0.3s ease, box-shadow 0.3s ease;

  // States
  &:hover {
    // Darken border on hover for feedback, using a similar scale as button hover if applicable
    border-color: color.scale($light-border, $lightness: -20%);
  }

  &:focus,
  &:focus-within {
    // Use focus-within for cases where the input might be wrapped (e.g., in a label)
    outline: none; // Remove default browser outline to use custom focus style
    border-color: $light-button-background; // Use button background color for focus border for thematic consistency
    box-shadow: 0 0 0 3px rgba(color.scale($light-button-background, $lightness: -10%), 0.4); // Subtle glow effect, similar to button interactions
  }

  &:disabled {
    background-color: #ccc; // Match button's disabled background
    color: #666; // Dim text color for disabled state
    cursor: not-allowed; // Indicate non-interactive state
    border-color: #bbb; // Slightly darker border for disabled state
  }

  // Placeholder styling
  &::placeholder {
    color: color.scale($light-text, $alpha: -50%); // Make placeholder text lighter and less prominent
    opacity: 1; // Ensures consistent placeholder visibility (especially for Firefox)
  }
}

select {
  background-color: $light-background;
  border: 2px solid $light-border;
  color: $light-text;
  font-family: inherit;
  font-size: 1.25rem;
  padding: 20px 15px;
  border-radius: 5px;
  margin: 4px 2px;
  box-sizing: border-box;
  display: inline-block;
  line-height: 1.2;
  min-height: 48px;
  appearance: none; // Removes default system styling
  background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='16' fill='%23333' viewBox='0 0 16 16'%3E%3Cpath d='M7.247 11.14 2.451 5.658C1.885 5.013 2.345 4 3.204 4h9.592a1 1 0 0 1 .753 1.659l-4.796 5.48a1 1 0 0 1-1.506 0z'/%3E%3C/svg%3E");
  background-repeat: no-repeat;
  background-position: right 15px center;
  background-size: 16px 12px;
  padding-right: 40px; // Make room for the arrow

  // Transitions for smooth focus/hover effects
  transition: border-color 0.3s ease, box-shadow 0.3s ease;

  // States
  &:hover {
    border-color: color.scale($light-border, $lightness: -20%);
  }

  &:focus {
    outline: none;
    border-color: $light-button-background;
    box-shadow: 0 0 0 3px rgba(color.scale($light-button-background, $lightness: -10%), 0.4);
  }

  &:disabled {
    background-color: #ccc;
    color: #666;
    cursor: not-allowed;
    border-color: #bbb;
    background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='16' fill='%23666' viewBox='0 0 16 16'%3E%3Cpath d='M7.247 11.14 2.451 5.658C1.885 5.013 2.345 4 3.204 4h9.592a1 1 0 0 1 .753 1.659l-4.796 5.48a1 1 0 0 1-1.506 0z'/%3E%3C/svg%3E");
  }

  // For multiple select
  &[multiple] {
    background-image: none;
    padding: 15px;

    option {
      padding: 8px 12px;
    }
  }
}


/* Base styles for all buttons */
.button,
button {
  background-color: $light-button-background;
  border: 2px solid $light-border;
  color: $light-button-text;
  padding: 15px 32px;
  text-align: center;
  text-decoration: none;
  display: inline-block;
  font-size: 1.25rem;
  margin: 4px 2px;
  cursor: pointer;
  border-radius: 5px;
  /* Smooth transition for hover/active */
  transition: background-color 0.3s ease;

  /* Important for touch devices: increase tap target size */
  /* Adjust padding for larger tap area */
  padding: 20px 40px;
  /* Ensure sufficient width */
  min-width: 4rem;


  /* Hover and active states */
  &:hover {
    /* Darker shade on hover */
    background-color: color.scale($light-button-background, $lightness: -10%);
  }

  &:active {
    /* Even darker shade when pressed */
    background-color: color.scale($light-button-background, $lightness: -30%);
    transform: translateY(2px);
  }

  /* Optional: Disabled state */
  &:disabled {
    background-color: #ccc;
    cursor: default;
  }

  /* Consider adding these for different button styles */
  &.confirm {
    background-color: $light-confirm;
  }

  &.cancel {
    background-color: $light-cancel;
  }

  &.active {
    background-color: color.scale($light-button-background, $lightness: -30%);
  }

}

.slider.round {
  border: 2px solid $light-border;
}

span.slider.round::before {
  border: 2px solid $light-border;
  bottom: 0;
  left: 0;
}

.button-outline {
  background-color: transparent;
  border: 2px solid #4CAF50;
  /* Green border */
  color: #4CAF50;
}


/* container */
.three-columns-grid {
  display: grid;
  grid-auto-rows: 1fr;
  grid-template-columns: 1fr 3fr 1.5fr;
}

/* columns */
.three-columns-grid>* {
  border: 1px dashed black;
  position: relative;
}